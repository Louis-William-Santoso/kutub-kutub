-- MySQL Script generated by MySQL Workbench
-- Tue Oct 28 20:15:36 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kutube_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kutube_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kutube_db` ;
USE `kutube_db` ;

-- -----------------------------------------------------
-- Table `kutube_db`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`user` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `full_name` VARCHAR(50) NOT NULL,
  `tanggal_lahir` DATE NOT NULL,
  `photo_url` TINYTEXT NULL,
  `kota` VARCHAR(45) NOT NULL,
  `pendidikan` CHAR(3) NOT NULL,
  `user_type` ENUM('Penonton', 'Creator') NULL,
  `no_ktp` VARCHAR(16) NULL,
  `foto_ktp_url` VARCHAR(45) NULL,
  `is_verified` TINYINT(1) NOT NULL,
  `created_at` TIMESTAMP NOT NULL,
  `is_prime` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id_user`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`video` (
  `id_video` INT NOT NULL AUTO_INCREMENT,
  `id_uploader` INT NOT NULL,
  `judul_video` TINYTEXT NOT NULL,
  `description` LONGTEXT NULL,
  `duration` INT NOT NULL,
  `video_type` ENUM('Panjang', 'Pendek') NOT NULL,
  `likes` INT NOT NULL DEFAULT 0,
  `dislikes` INT NOT NULL DEFAULT 0,
  `views` INT NOT NULL DEFAULT 0,
  `views_total_time` INT NOT NULL DEFAULT 0,
  `upload_time` TIMESTAMP NOT NULL,
  `status` ENUM('Aktif', 'Diblokir') NOT NULL DEFAULT 'Aktif',
  `highlight` TIME NOT NULL,
  PRIMARY KEY (`id_video`),
  INDEX `fk_video_user_idx` (`id_uploader` ASC),
  CONSTRAINT `fk_video_user`
    FOREIGN KEY (`id_uploader`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`kategori`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`kategori` (
  `id_kategori` INT NOT NULL AUTO_INCREMENT,
  `nama_kategori` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_kategori`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`comments` (
  `id_comments` INT NOT NULL AUTO_INCREMENT,
  `id_user` INT NOT NULL,
  `id_video` INT NOT NULL,
  `isi_comment` LONGTEXT NOT NULL,
  PRIMARY KEY (`id_comments`),
  INDEX `fk_comments_user1_idx` (`id_user` ASC),
  INDEX `fk_comments_video1_idx` (`id_video` ASC),
  CONSTRAINT `fk_comments_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comments_video1`
    FOREIGN KEY (`id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`watch_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`watch_history` (
  `id_user` INT NOT NULL,
  `id_video` INT NOT NULL,
  `click_time` TIMESTAMP NOT NULL,
  `on_duration` INT NOT NULL,
  PRIMARY KEY (`id_user`, `id_video`),
  INDEX `fk_watch_history_video1_idx` (`id_video` ASC),
  CONSTRAINT `fk_watch_history_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_watch_history_video1`
    FOREIGN KEY (`id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`playlist` (
  `id_playlist` INT NOT NULL AUTO_INCREMENT,
  `judul_playlist` TINYTEXT NOT NULL DEFAULT 'New Playlist',
  `description` LONGTEXT NULL,
  PRIMARY KEY (`id_playlist`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`user_has_playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`user_has_playlist` (
  `user_id_user` INT NOT NULL,
  `playlist_id_playlist` INT NOT NULL,
  PRIMARY KEY (`user_id_user`, `playlist_id_playlist`),
  INDEX `fk_user_has_playlist_playlist1_idx` (`playlist_id_playlist` ASC),
  INDEX `fk_user_has_playlist_user1_idx` (`user_id_user` ASC),
  CONSTRAINT `fk_user_has_playlist_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_playlist_playlist1`
    FOREIGN KEY (`playlist_id_playlist`)
    REFERENCES `kutube_db`.`playlist` (`id_playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`video_has_playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`video_has_playlist` (
  `video_id_video` INT NOT NULL,
  `playlist_id_playlist` INT NOT NULL,
  PRIMARY KEY (`video_id_video`, `playlist_id_playlist`),
  INDEX `fk_video_has_playlist_playlist1_idx` (`playlist_id_playlist` ASC),
  INDEX `fk_video_has_playlist_video1_idx` (`video_id_video` ASC),
  CONSTRAINT `fk_video_has_playlist_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_has_playlist_playlist1`
    FOREIGN KEY (`playlist_id_playlist`)
    REFERENCES `kutube_db`.`playlist` (`id_playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`hastag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`hastag` (
  `id_hastag` INT NOT NULL AUTO_INCREMENT,
  `hastag_name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_hastag`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`video_has_hastag_kategori`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`video_has_hastag_kategori` (
  `kategori_id_kategori` INT NOT NULL,
  `hastag_id_hastag` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  PRIMARY KEY (`kategori_id_kategori`, `hastag_id_hastag`, `video_id_video`),
  INDEX `fk_kategori_has_hastag_hastag1_idx` (`hastag_id_hastag` ASC),
  INDEX `fk_kategori_has_hastag_kategori1_idx` (`kategori_id_kategori` ASC),
  INDEX `fk_kategori_has_hastag_video1_idx` (`video_id_video` ASC),
  CONSTRAINT `fk_video_has_kategori_hastag_kategori1`
    FOREIGN KEY (`kategori_id_kategori`)
    REFERENCES `kutube_db`.`kategori` (`id_kategori`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_has_kategori_hastag_hastag1`
    FOREIGN KEY (`hastag_id_hastag`)
    REFERENCES `kutube_db`.`hastag` (`id_hastag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_has_kategori_hastag_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`blocked_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`blocked_user` (
  `id_user` INT NOT NULL,
  `time_left` DATETIME NOT NULL,
  PRIMARY KEY (`id_user`),
  CONSTRAINT `fk_blocked_user_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`blocked_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`blocked_video` (
  `id_video` INT NOT NULL,
  `start_suspend` TIMESTAMP NOT NULL,
  `end_suspend` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id_video`),
  CONSTRAINT `fk_blocked_video_video1`
    FOREIGN KEY (`id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`login_session`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`login_session` (
  `user_id_user` INT NOT NULL,
  `login_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`user_id_user`),
  CONSTRAINT `fk_login_session_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`statistic_chanel_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`statistic_chanel_log` (
  `id_user` INT NOT NULL,
  `jumlah_subs` INT NOT NULL DEFAULT 0,
  `watch_time` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id_user`),
  CONSTRAINT `fk_statistic_channel_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`trending_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`trending_video` (
  `jumlah_click` INT NOT NULL DEFAULT 0,
  `id_kategori` INT NOT NULL,
  `id_hastag` INT NOT NULL,
  `id_video` INT NOT NULL,
  INDEX `fk_trending_video_video_has_hastag_kategori1_idx` (`id_kategori` ASC, `id_hastag` ASC, `id_video` ASC),
  CONSTRAINT `fk_trending_video_video_has_hastag_kategori1`
    FOREIGN KEY (`id_kategori` , `id_hastag` , `id_video`)
    REFERENCES `kutube_db`.`video_has_hastag_kategori` (`kategori_id_kategori` , `hastag_id_hastag` , `video_id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`report_content`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`report_content` (
  `id_user` INT NOT NULL,
  `id_comments` INT NOT NULL,
  `description` LONGTEXT NULL,
  INDEX `fk_report_content_comments1_idx` (`id_comments` ASC),
  INDEX `fk_report_content_user1_idx` (`id_user` ASC),
  CONSTRAINT `fk_report_content_comments1`
    FOREIGN KEY (`id_comments`)
    REFERENCES `kutube_db`.`comments` (`id_comments`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_report_content_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`report_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`report_video` (
  `id_user` INT NOT NULL,
  `id_video` INT NOT NULL,
  `description` LONGTEXT NULL,
  INDEX `fk_report_video_user1_idx` (`id_user` ASC),
  INDEX `fk_report_video_video1_idx` (`id_video` ASC),
  CONSTRAINT `fk_report_video_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_report_video_video1`
    FOREIGN KEY (`id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`downloaded_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`downloaded_video` (
  `user_id_user` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  PRIMARY KEY (`user_id_user`, `video_id_video`),
  INDEX `fk_user_has_video_video1_idx` (`video_id_video` ASC),
  INDEX `fk_user_has_video_user1_idx` (`user_id_user` ASC),
  CONSTRAINT `fk_user_has_video_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_video_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`watch_session`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`watch_session` (
  `idSession` INT NOT NULL AUTO_INCREMENT,
  `user_id_user` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  `ads` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`idSession`, `user_id_user`, `video_id_video`),
  INDEX `fk_watch_session_video1_idx` (`video_id_video` ASC),
  CONSTRAINT `fk_watch_session_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `kutube_db`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_watch_session_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kutube_db`.`adsense`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kutube_db`.`adsense` (
  `id_video` INT NOT NULL,
  `jumlah_iklan` INT NOT NULL,
  PRIMARY KEY (`id_video`),
  INDEX `fk_adsense_video1_idx` (`id_video` ASC),
  CONSTRAINT `fk_adsense_video1`
    FOREIGN KEY (`id_video`)
    REFERENCES `kutube_db`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
